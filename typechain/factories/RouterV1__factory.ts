/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RouterV1 } from "../RouterV1";

export class RouterV1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<RouterV1> {
    return super.deploy(overrides || {}) as Promise<RouterV1>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RouterV1 {
    return super.attach(address) as RouterV1;
  }
  connect(signer: Signer): RouterV1__factory {
    return super.connect(signer) as RouterV1__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterV1 {
    return new Contract(address, _abi, signerOrProvider) as RouterV1;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "geyser",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "permission",
        type: "bytes",
      },
    ],
    name: "create2VaultAndStake",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "geyser",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct RouterV1.Permit",
        name: "permit",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permission",
        type: "bytes",
      },
    ],
    name: "create2VaultPermitAndStake",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "geyser",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct RouterV1.Permit",
        name: "permit",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permission",
        type: "bytes",
      },
    ],
    name: "permitAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "geyser",
            type: "address",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permission",
            type: "bytes",
          },
        ],
        internalType: "struct RouterV1.StakeRequest[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "stakeMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "geyser",
            type: "address",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permission",
            type: "bytes",
          },
        ],
        internalType: "struct RouterV1.UnstakeRequest[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "unstakeMulti",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f1d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806369dd2b481161005057806369dd2b4814610094578063a4a33d9e146100bd578063f7e7722a146100d057610067565b806308690ad11461006c5780635030795514610081575b600080fd5b61007f61007a366004610b84565b6100e3565b005b61007f61008f366004610bff565b610281565b6100a76100a2366004610a7f565b61034d565b6040516100b49190610d3e565b60405180910390f35b61007f6100cb366004610bff565b610453565b6100a76100de366004610b16565b61051a565b6000856001600160a01b03166313eb92246040518163ffffffff1660e01b815260040160006040518083038186803b15801561011e57600080fd5b505afa158015610132573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261015a9190810190610c3f565b5190506001600160a01b03811663d505accf6101796020870187610a40565b6101896040880160208901610a40565b604088013560608901356101a360a08b0160808c01610d1d565b8a60a001358b60c001356040518863ffffffff1660e01b81526004016101cf9796959493929190610d76565b600060405180830381600087803b1580156101e957600080fd5b505af11580156101fd573d6000803e3d6000fd5b505050506102118133878760400135610712565b60408051633e12170f60e01b81526001600160a01b03881691633e12170f91610247918991908901359088908890600401610db7565b600060405180830381600087803b15801561026157600080fd5b505af1158015610275573d6000803e3d6000fd5b50505050505050505050565b60005b81811015610348573683838381811061029957fe5b90506020028101906102ab9190610e5b565b90506102ba6020820182610a40565b6001600160a01b0316636471aadb6102d86040840160208501610a40565b60408401356102ea6060860186610e16565b6040518563ffffffff1660e01b81526004016103099493929190610db7565b600060405180830381600087803b15801561032357600080fd5b505af1158015610337573d6000803e3d6000fd5b505060019093019250610284915050565b505050565b604051634605c6d960e11b81526000906001600160a01b03881690638c0b8db29061037c908890600401610dfd565b602060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610a63565b9050866001600160a01b03166342842e0e3088846001600160a01b03166040518463ffffffff1660e01b815260040161040993929190610d52565b600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b5050505061044888828686866100e3565b979650505050505050565b60005b81811015610348573683838381811061046b57fe5b905060200281019061047d9190610e5b565b905061048c6020820182610a40565b6001600160a01b0316633e12170f6104aa6040840160208501610a40565b60408401356104bc6060860186610e16565b6040518563ffffffff1660e01b81526004016104db9493929190610db7565b600060405180830381600087803b1580156104f557600080fd5b505af1158015610509573d6000803e3d6000fd5b505060019093019250610456915050565b604051634605c6d960e11b81526000906001600160a01b03881690638c0b8db290610549908790600401610dfd565b602060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190610a63565b90506000886001600160a01b03166313eb92246040518163ffffffff1660e01b815260040160006040518083038186803b1580156105d857600080fd5b505afa1580156105ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106149190810190610c3f565b516040517f42842e0e0000000000000000000000000000000000000000000000000000000081529091506001600160a01b03808a16916342842e0e916106649130918c9190881690600401610d52565b600060405180830381600087803b15801561067e57600080fd5b505af1158015610692573d6000803e3d6000fd5b505050506106a281338489610712565b604051633e12170f60e01b81526001600160a01b038a1690633e12170f906106d49085908a9089908990600401610db7565b600060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b5050505050979650505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106107c45780518252601f1990920191602091820191016107a5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610826576040519150601f19603f3d011682016040523d82523d6000602084013e61082b565b606091505b5091509150818015610859575080511580610859575080806020019051602081101561085657600080fd5b50515b6108ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180610eb76031913960400191505060405180910390fd5b505050505050565b80516108c181610e9e565b919050565b600082601f8301126108d6578081fd5b8151602067ffffffffffffffff8211156108ec57fe5b6108f98182840201610e7a565b82815281810190858301606080860288018501891015610917578687fd5b865b8681101561093d5761092b8a846109eb565b85529385019391810191600101610919565b509198975050505050505050565b60008083601f84011261095c578182fd5b50813567ffffffffffffffff811115610973578182fd5b602083019150836020808302850101111561098d57600080fd5b9250929050565b60008083601f8401126109a5578182fd5b50813567ffffffffffffffff8111156109bc578182fd5b60208301915083602082850101111561098d57600080fd5b600060e082840312156109e5578081fd5b50919050565b6000606082840312156109fc578081fd5b6040516060810181811067ffffffffffffffff82111715610a1957fe5b80604052508091508251815260208301516020820152604083015160408201525092915050565b600060208284031215610a51578081fd5b8135610a5c81610e9e565b9392505050565b600060208284031215610a74578081fd5b8151610a5c81610e9e565b6000806000806000806000610180888a031215610a9a578283fd5b8735610aa581610e9e565b96506020880135610ab581610e9e565b95506040880135610ac581610e9e565b945060608801359350610adb8960808a016109d4565b925061016088013567ffffffffffffffff811115610af7578283fd5b610b038a828b01610994565b989b979a50959850939692959293505050565b600080600080600080600060c0888a031215610b30578283fd5b8735610b3b81610e9e565b96506020880135610b4b81610e9e565b95506040880135610b5b81610e9e565b9450606088013593506080880135925060a088013567ffffffffffffffff811115610af7578283fd5b60008060008060006101408688031215610b9c578081fd5b8535610ba781610e9e565b94506020860135610bb781610e9e565b9350610bc687604088016109d4565b925061012086013567ffffffffffffffff811115610be2578182fd5b610bee88828901610994565b969995985093965092949392505050565b60008060208385031215610c11578182fd5b823567ffffffffffffffff811115610c27578283fd5b610c338582860161094b565b90969095509350505050565b600060208284031215610c50578081fd5b815167ffffffffffffffff80821115610c67578283fd5b908301906101608286031215610c7b578283fd5b610120610c8781610e7a565b610c90846108b6565b8152610c9e602085016108b6565b6020820152610caf604085016108b6565b6040820152610cc187606086016109eb565b606082015260c0840151608082015260e084015160a08201526101008085015160c08301528285015160e0830152610140850151925083831115610d03578586fd5b610d0f888487016108c6565b908201529695505050505050565b600060208284031215610d2e578081fd5b813560ff81168114610a5c578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b60006001600160a01b03861682528460208301526060604083015282606083015282846080840137818301608090810191909152601f909201601f191601019392505050565b6040808252600090820152602081019190915260600190565b6000808335601e19843603018112610e2c578283fd5b83018035915067ffffffffffffffff821115610e46578283fd5b60200191503681900382131561098d57600080fd5b60008235607e19833603018112610e70578182fd5b9190910192915050565b60405181810167ffffffffffffffff81118282101715610e9657fe5b604052919050565b6001600160a01b0381168114610eb357600080fd5b5056fe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564a264697066735822122094402fb324e1e4b617b7d6edd8b493dc0e0682359a1500693e66de16b757366864736f6c63430007060033";
