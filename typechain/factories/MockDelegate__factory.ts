/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { MockDelegate } from '../MockDelegate'

export class MockDelegate__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<MockDelegate> {
    return super.deploy(overrides || {}) as Promise<MockDelegate>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): MockDelegate {
    return super.attach(address) as MockDelegate
  }
  connect(signer: Signer): MockDelegate__factory {
    return super.connect(signer) as MockDelegate__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockDelegate {
    return new Contract(address, _abi, signerOrProvider) as MockDelegate
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'permission',
        type: 'bytes',
      },
    ],
    name: 'lock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageQuit',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum MockDelegate.DelegateType',
        name: 'delegateType',
        type: 'uint8',
      },
    ],
    name: 'setDelegateType',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'permission',
        type: 'bytes',
      },
    ],
    name: 'unlock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610496806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063b0ccbf8c14610051578063b61901e91461005b578063ce6df54a1461007b578063f0ca60fb14610141575b600080fd5b610059610207565b005b6100596004803603602081101561007157600080fd5b503560ff166102cd565b6100596004803603608081101561009157600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156100cc57600080fd5b8201836020820111156100de57600080fd5b8035906020019184600183028401116401000000008311171561010057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102ee945050505050565b6100596004803603608081101561015757600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561019257600080fd5b8201836020820111156101a457600080fd5b803590602001918460018302840111640100000000831117156101c657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103cd945050505050565b6000805460ff16600381111561021957fe5b1415610224576102cb565b600160005460ff16600381111561023757fe5b141561024257600080fd5b600260005460ff16600381111561025557fe5b14156102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806104406021913960400191505060405180910390fd5b600360005460ff1660038111156102bf57fe5b14156102cb575b6102c6565b565b6000805482919060ff191660018360038111156102e657fe5b021790555050565b836001600160a01b031663c792f45d8484846040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610361578181015183820152602001610349565b50505050905090810190601f16801561038e5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b5050505050505050565b836001600160a01b031663abee08038484846040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360008381101561036157818101518382015260200161034956fe4d6f636b44656c65676174653a207265766572742077697468206d657373616765a264697066735822122091cca9aeec85b5fb9c835b4931b0632df679272e6a7e4249fbb8971846c6145864736f6c63430007060033'
