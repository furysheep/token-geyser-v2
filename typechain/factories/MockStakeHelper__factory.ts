/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { MockStakeHelper } from '../MockStakeHelper'

export class MockStakeHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<MockStakeHelper> {
    return super.deploy(overrides || {}) as Promise<MockStakeHelper>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): MockStakeHelper {
    return super.attach(address) as MockStakeHelper
  }
  connect(signer: Signer): MockStakeHelper__factory {
    return super.connect(signer) as MockStakeHelper__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockStakeHelper {
    return new Contract(address, _abi, signerOrProvider) as MockStakeHelper
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'geyser',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'lockPermission',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'unstakePermission',
        type: 'bytes',
      },
    ],
    name: 'flashStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'geysers',
        type: 'address[]',
      },
      {
        internalType: 'address[]',
        name: 'vaults',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes[]',
        name: 'permissions',
        type: 'bytes[]',
      },
    ],
    name: 'stakeBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610538806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637141d2a91461003b578063838bd17c14610050575b600080fd5b61004e6100493660046103b8565b610063565b005b61004e61005e366004610320565b610157565b60005b8581101561014c5788888281811061007a57fe5b905060200201602081019061008f91906102ff565b6001600160a01b0316633e12170f8888848181106100a957fe5b90506020020160208101906100be91906102ff565b8787858181106100ca57fe5b905060200201358686868181106100dd57fe5b90506020028101906100ef91906104bd565b6040518563ffffffff1660e01b815260040161010e9493929190610477565b600060405180830381600087803b15801561012857600080fd5b505af115801561013c573d6000803e3d6000fd5b5050600190920191506100669050565b505050505050505050565b6040517f3e12170f0000000000000000000000000000000000000000000000000000000081526001600160a01b03881690633e12170f906101a2908990899089908990600401610477565b600060405180830381600087803b1580156101bc57600080fd5b505af11580156101d0573d6000803e3d6000fd5b50506040517f6471aadb0000000000000000000000000000000000000000000000000000000081526001600160a01b038a169250636471aadb915061021f908990899087908790600401610477565b600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b5050505050505050505050565b80356001600160a01b038116811461027157600080fd5b919050565b60008083601f840112610287578182fd5b50813567ffffffffffffffff81111561029e578182fd5b60208301915083602080830285010111156102b857600080fd5b9250929050565b60008083601f8401126102d0578182fd5b50813567ffffffffffffffff8111156102e7578182fd5b6020830191508360208285010111156102b857600080fd5b600060208284031215610310578081fd5b6103198261025a565b9392505050565b600080600080600080600060a0888a03121561033a578283fd5b6103438861025a565b96506103516020890161025a565b955060408801359450606088013567ffffffffffffffff80821115610374578485fd5b6103808b838c016102bf565b909650945060808a0135915080821115610398578384fd5b506103a58a828b016102bf565b989b979a50959850939692959293505050565b6000806000806000806000806080898b0312156103d3578081fd5b883567ffffffffffffffff808211156103ea578283fd5b6103f68c838d01610276565b909a50985060208b013591508082111561040e578283fd5b61041a8c838d01610276565b909850965060408b0135915080821115610432578283fd5b61043e8c838d01610276565b909650945060608b0135915080821115610456578283fd5b506104638b828c01610276565b999c989b5096995094979396929594505050565b60006001600160a01b03861682528460208301526060604083015282606083015282846080840137818301608090810191909152601f909201601f191601019392505050565b6000808335601e198436030181126104d3578283fd5b83018035915067ffffffffffffffff8211156104ed578283fd5b6020019150368190038213156102b857600080fdfea2646970667358221220282037e7b75e9e187ed40f908a575b0e4f7e4ca539a0e618e3a25b99d0d12ce964736f6c63430007060033'
